plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'me.modmuss50.mod-publish-plugin' version '0.5.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.mod_id
}

repositories {
	// Add repositories to retrieve artifacts from in here.
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

processResources {
	def properties = [
			version: mod_version, github_repo: 'http://github.com/' + github,
			display_name: display_name, modrinth_id: modrinth_id, curseforge_id: curseforge_id
	]

	inputs.properties properties

	filesMatching("fabric.mod.json") {
		expand properties
	}

	doLast {
		fileTree(dir: outputs.files.asPath).each {
			if (it.name.endsWith(".json")) {
				def parsed = new JsonSlurper().parse(it)
				parsed.remove "credit"
				it.text = JsonOutput.toJson(parsed)
			}
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from "LICENSE"
}

loom {
//	splitEnvironmentSourceSets()
//
//	mods {
//		"${project.mod_id}" {
//			sourceSet sourceSets.main
//			sourceSet sourceSets.client
//		}
//	}

    mixin.useLegacyMixinAp = false

	runs {
		clientMixinDebug {
			client()
			ideConfigGenerated true
			name = "Client Mixin Debug"
			source sourceSets.main
			property 'mixin.debug', 'true'
		}

		serverMixinDebug {
			server()
			ideConfigGenerated true
			name = "Server Mixin Debug"
			source sourceSets.main
			property 'mixin.debug', 'true'
		}
	}

//	accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
}

publishMods {
	file = remapJar.archiveFile
	additionalFiles.from remapSourcesJar.archiveFile
	type = STABLE

	displayName = display_name

	modrinth {
		accessToken = providers.environmentVariable 'MODRINTH_TOKEN'
		projectId = modrinth_id
		minecraftVersions.add minecraft_version

		requires {
			slug = 'fabric-api'
		}
	}

    github {
		accessToken = providers.environmentVariable 'GITHUB_TOKEN'
		repository = github
		tagName = mod_version
		commitish = 'master'
	}
}